{"name":"Mindsumo-zapos-challenge","tagline":"My submissions for mind sumo challenges","body":"## Zapos Challenge ##\r\n========================\r\n\r\nMy submissions for mind sumo challenges.\r\nThe goal was to create a Java application, where the user can enter a Zappos product id, and product name to be registered for when the product is on sale.\r\n\r\n### General ###\r\n- The UI is created using JavaFx 2 (JDK 7)\r\n- The backend notification [service](http://fakezapposnotificationservice.npatta01.cloudbees.net/)  is written using the Play framework and is deployed on cloudbees\r\n- Applications is composed of several maven modules\r\n- Its best to download the release binary from github\r\n\r\n### Running the program\r\nPlease follow the build instructions if you would like to build the project, else download the release binary from github.\r\nThe main app is the jar file 'UI-1.0-SNAPSHOT-jfx.jar'\r\n\r\n\r\n\r\n### Screens in the UI ###\r\n**Login Screen:**\r\nEnter email. If you are an existing user, your subscription list will be shown, else you will automatically register as a new user\r\n![](/images/main_screen.png)\r\n\r\n**Search Results Screen:**\r\nIf product query, has multiple style the below window will be shown asking to select specific styles.\r\n![](//images/login_screen.png)\r\n**Main Screen**\r\nClick on subscribe, to update the subscription list\r\n![](//images/results.png)\r\n\r\n\r\n###Notification Service###\r\nA backend service that I wrote to wrap around the ZapposApi. Users can ask the api for product information given a styleid, productid, product name. User’s can register/unregister to be notified for certain items .\r\nThe server is deployed [here](http://fakezapposnotificationservice.npatta01.cloudbees.net/) \r\n\r\nEvery 12 hours, a job is fired to check the price of registered items.\r\nEmails are send using SendGrid: from “notification@npatta01-zappos.com “\r\n\r\n\r\nBelow are possible options to get info from the service\r\n\r\n- Get info on product id 115328\r\n[/api/Product?product_id=115328](http://fakezapposnotificationservice.npatta01.cloudbees.net/api/Product?product_id=115328)\r\n\r\n- Get info on product with name “classic tall black”\r\n[/api/Product?product_name=classic%20tall%20black](http://fakezapposnotificationservice.npatta01.cloudbees.net/api/Product?product_name=classic%20tall%20black)\r\n\r\n- Get info on product with style id “1788226”\r\n[/api/Product?style_id=1788226](http://fakezapposnotificationservice.npatta01.cloudbees.net/api/Product?style_id=1788226)\r\n\r\n- Unregister user “npatta01@gmail.com”\r\n[/api/User/unregister?email=npatta01@gmail.com](http://fakezapposnotificationservice.npatta01.cloudbees.net/api/User/unregister?email=npatta01@gmail.com)\r\n\r\n- Register user\r\n[/api/User/register?email=npatta01@gmail.com](http://fakezapposnotificationservice.npatta01.cloudbees.net/api/User/register?email=npatta01@gmail.com)\r\n\r\n- Verify User with email npatta01@gmail.com and verification code 9708a56b-9566-40c9-8e6a-604a3b24274f\r\n[/api/User/verify?email=npatta01@gmail.com&verificationCode=9708a56b-9566-40c9-8e6a-604a3b24274f](http://fakezapposnotificationservice.npatta01.cloudbees.net/api/User/verify?email=npatta01@gmail.com&verificationCode=9708a56b-9566-40c9-8e6a-604a3b24274f)\r\n\r\n- Notify to be subscribed for email npatta01@gmail.com and items [2123605,1788226\\\r\nPost a json request to /api/User/notify\r\nWith a body such as \r\n{\"emailAddress\":\"npatta01@gmail.com\", \"products\":[2123605, 1788226]} \r\n\r\n- Force Notification Job\r\nTo force a price check, submit a post request to\r\n\r\n[http://fakezapposnotificationservice.npatta01.cloudbees.net/startJob](http://fakezapposnotificationservice.npatta01.cloudbees.net/startJob)\r\n\r\n### Building###\r\n- Requires JavaFx/JDK7 to be installed and in the path\r\n- Requires maven to be installed and in path\r\n- Optional: running NotificationService requires play 2.1+ to be installed\r\n- cd into the 'ZappposNotification' directory (main maven module)\r\n- Run ‘mvn install’\r\n- the program is composed of 4 moduels, if the 'Services' module that is obkay\r\n\r\n**To create an executable jar**\r\n\r\n- navigate to the UI module\r\n- run mvn clean jfx:jar\r\n- result will be in target/jfx/app\r\n- click \" UI-1.0-SNAPSHOT-jfx.jar\"\r\n\r\n\r\n\r\n\r\n\r\n","google":"UA-45866674-2","note":"Don't delete this file! It's used internally to help with page regeneration."}